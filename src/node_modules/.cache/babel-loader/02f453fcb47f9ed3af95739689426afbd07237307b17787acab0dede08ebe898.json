{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useValidation = initialState => {\n  _s();\n  const [value, setValue] = useState(initialState);\n  const [dirty, setDirty] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Поле не должно быть пустым');\n  const onBlur = e => {\n    const nameTarget = e.target.name;\n    const newValue = e.target.value;\n    setDirty(true);\n    if (nameTarget === 'email') {\n      setErrorMessage(validate(newValue, {\n        isEmail: true,\n        required: true\n      }));\n    } else if (nameTarget === 'password') {\n      setErrorMessage(validate(newValue, {\n        isPassword: true,\n        required: true,\n        minLenght: 8\n      }));\n    } else if (nameTarget === 'name') {\n      setErrorMessage(validate(newValue, {\n        isName: true,\n        required: true\n      }));\n    } else if (nameTarget === 'checking') {\n      setErrorMessage(validate(e.target.checked, {\n        isCheck: true,\n        required: true\n      }));\n    }\n  };\n  const onChange = e => {\n    const nameTarget = e.target.name;\n    const newValue = nameTarget === 'checking' ? e.target.checked : e.target.value;\n    setValue(newValue);\n    if (nameTarget === 'email') {\n      setErrorMessage(validate(newValue, {\n        isEmail: true,\n        required: true\n      }));\n    } else if (nameTarget === 'password') {\n      setErrorMessage(validate(newValue, {\n        isPassword: true,\n        required: true,\n        minLenght: 8\n      }));\n    } else if (nameTarget === 'name') {\n      setErrorMessage(validate(newValue, {\n        isName: true,\n        required: true\n      }));\n    } else if (nameTarget === 'checking') {\n      setErrorMessage(validate(e.target.checked, {\n        isCheck: true,\n        required: true\n      }));\n    }\n  };\n  const validate = (value, rules) => {\n    if (!rules) {\n      setError(false);\n      return '';\n    }\n    if (rules.required && value.length === 0) {\n      setError(true);\n      return 'Поле не должно быть пустым';\n    }\n    if (rules.isEmail && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      setError(true);\n      return 'Указан некоректный email';\n    }\n    if (rules.isPassword && value.length < rules.minLenght) {\n      setError(true);\n      return `Длина пароля должна быть минимум ${rules.minLenght} ${rules.minLenght >= 5 ? 'символов' : 'символа'}`;\n    }\n    if (rules.isName && /[А-Яа-я]/.test(value)) {\n      setError(true);\n      return 'Имя должно быть из английских букв';\n    }\n    if (rules.isComment && value.length < rules.minLenght) {\n      setError(true);\n      return `Комментарий должен содержать минимум ${rules.minLenght} символов`;\n    }\n    if (rules.isCheck) {\n      if (rules.required && !value) {\n        setError(true);\n        return 'Необходимо согласиться с условиями';\n      }\n      setError(false);\n      return '';\n    }\n  };\n  const reset = () => {\n    setValue(initialState);\n    setDirty(false);\n    setError(false);\n    setErrorMessage('Поле не должно быть пустым');\n  };\n  return {\n    value,\n    dirty,\n    onChange,\n    onBlur,\n    error,\n    errorMessage,\n    reset\n  };\n};\n_s(useValidation, \"TbsXpJdPhWCI+7qU9G3lSrVaFKs=\");","map":{"version":3,"names":["useState","useValidation","initialState","_s","value","setValue","dirty","setDirty","error","setError","errorMessage","setErrorMessage","onBlur","e","nameTarget","target","name","newValue","validate","isEmail","required","isPassword","minLenght","isName","checked","isCheck","onChange","rules","length","test","isComment","reset"],"sources":["/Users/krein/Downloads/Login-Register-logic-React-main/src/hooks/useValidation.js"],"sourcesContent":["import {useState} from 'react'\n\nexport const useValidation = (initialState) => {\n    const [value, setValue] = useState(initialState)\n    const [dirty, setDirty] = useState(false)\n    const [error, setError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('Поле не должно быть пустым')\n\n    const onBlur = (e) => {\n        const nameTarget = e.target.name\n        const newValue = e.target.value\n        setDirty(true)\n        if(nameTarget === 'email') {\n            setErrorMessage(validate(newValue, {isEmail: true, required: true}))\n        } else if(nameTarget === 'password') {\n            setErrorMessage(validate(newValue, {isPassword: true, required: true, minLenght: 8}))\n        } else if(nameTarget === 'name') {\n            setErrorMessage(validate(newValue, {isName: true, required: true}))\n        } else if(nameTarget === 'checking') {\n            setErrorMessage(validate(e.target.checked, {isCheck: true, required: true}))\n        }\n    }\n\n    const onChange = (e) => {\n        const nameTarget = e.target.name\n        const newValue = nameTarget === 'checking' ? e.target.checked : e.target.value;\n        setValue(newValue)\n        if(nameTarget === 'email') {\n            setErrorMessage(validate(newValue, {isEmail: true, required: true}))\n        } else if(nameTarget === 'password') {\n            setErrorMessage(validate(newValue, {isPassword: true, required: true, minLenght: 8}))\n        } else if(nameTarget === 'name') {\n            setErrorMessage(validate(newValue, {isName: true, required: true}))\n        } else if(nameTarget === 'checking') {\n            setErrorMessage(validate(e.target.checked, {isCheck: true, required: true}))\n        }\n    }\n\n    const validate = (value, rules) => {\n       if(!rules) {\n        setError(false)\n        return ''\n       }\n\n       if(rules.required && value.length === 0) {\n        setError(true)\n        return 'Поле не должно быть пустым'\n       }\n\n       if(rules.isEmail && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n        setError(true)\n        return 'Указан некоректный email'\n       }\n\n       if(rules.isPassword && value.length < rules.minLenght) {\n        setError(true)\n        return `Длина пароля должна быть минимум ${rules.minLenght} ${rules.minLenght >= 5 ? 'символов' : 'символа'}`\n       }\n       \n       if(rules.isName && /[А-Яа-я]/.test(value)) {\n        setError(true)\n        return 'Имя должно быть из английских букв'\n       }\n\n       if(rules.isComment && value.length < rules.minLenght) {\n        setError(true)\n        return `Комментарий должен содержать минимум ${rules.minLenght} символов`\n       }\n\n       if(rules.isCheck) {\n        if(rules.required && !value) {\n            setError(true)\n             return 'Необходимо согласиться с условиями';\n        }\n        setError(false)\n        return ''\n       }\n    }\n\n    const reset = () => {\n        setValue(initialState)\n        setDirty(false)\n        setError(false)\n        setErrorMessage('Поле не должно быть пустым')\n    }\n\n    return {value, dirty, onChange, onBlur, error, errorMessage, reset}\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}