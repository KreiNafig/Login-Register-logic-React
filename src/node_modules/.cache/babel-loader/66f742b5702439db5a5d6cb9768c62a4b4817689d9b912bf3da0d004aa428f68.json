{"ast":null,"code":"var _jsxFileName = \"/Users/krein/Downloads/Login-Register-logic-React-main/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContextAuth = /*#__PURE__*/createContext(false);\nfunction App() {\n  _s();\n  const [auth, setAuth] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setAuth(token === 'true');\n    setLoading(false);\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContextAuth.Provider, {\n      value: {\n        auth,\n        setAuth\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"hjKJWLQsHHbJ0d47XWku0DAxFhE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","AppRoutes","createContext","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ContextAuth","App","_s","auth","setAuth","isLoading","setLoading","token","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/krein/Downloads/Login-Register-logic-React-main/src/App.js"],"sourcesContent":["import { BrowserRouter } from \"react-router-dom\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { createContext, useEffect, useState } from \"react\";\n\n\nexport const ContextAuth = createContext(false)\n\nfunction App() {\n  const [auth, setAuth] = useState(false)\n  const [isLoading, setLoading] = useState(true)\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    setAuth(token === 'true')\n    setLoading(false)\n  }, [])\n\n  if(isLoading) {\n    return (<div>Loading...</div>)\n  }\n\n  return (\n    <>\n    <ContextAuth.Provider value={{auth, setAuth}}>\n    <BrowserRouter>\n      <AppRoutes />\n    </BrowserRouter>\n    </ContextAuth.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3D,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,KAAK,CAAC;AAE/C,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACU,SAAS,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CL,OAAO,CAACG,KAAK,KAAK,MAAM,CAAC;IACzBD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGD,SAAS,EAAE;IACZ,oBAAQR,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;EAEA,oBACEjB,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA,CAACG,WAAW,CAACe,QAAQ;MAACC,KAAK,EAAE;QAACb,IAAI;QAAEC;MAAO,CAAE;MAAAM,QAAA,eAC7Cb,OAAA,CAACN,aAAa;QAAAmB,QAAA,eACZb,OAAA,CAACL,SAAS;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC,gBACrB,CAAC;AAEP;AAACZ,EAAA,CAtBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}